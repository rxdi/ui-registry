{"version":3,"sources":["interceptor.ts"],"names":[],"mappings":"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","file":"interceptor.js","sourceRoot":"..","sourcesContent":["import { Request } from 'hapi';\nimport { errorUnauthorized, GenericGapiResolversType } from '@gapi/core';\n\ninterface Context {\n  user: { type: string };\n}\n\ninterface Resolver extends GenericGapiResolversType {\n  scope?: string[];\n  public?: boolean;\n}\n\nexport async function OnRequestHook(request: Request) {\n  console.log('OH MY GOD PESHO', request.headers);\n  return { user: { type: 'ADMIN' } };\n}\n\nexport async function ResolverHook(resolver: Resolver, root, args, context: Context, info) {\n    console.log(context);\n    return ResolverHooks(resolver, root, args, context, info);\n}\n\nfunction canAccess(resolverScope: string[], context: Context) {\n  return context && context.user && resolverScope.filter(scope => scope === context.user.type).length\n    ? true\n    : errorUnauthorized();\n}\nfunction AuthenticationHooks(resolver: Resolver, context: Context) {\n  canAccess(resolver.scope, context);\n}\nfunction ResolverHooks(resolver: Resolver, root, args, context: Context, info) {\n  if (resolver && !resolver.public) {\n    AuthenticationHooks(resolver, context);\n  }\n}\n"]}